pipeline {
agent none
    stages {
        stage('build') {
    agent {
        docker {
            image 'python:2.7.16-slim'
            args '--user root'
        }
    }
            when {
                changeset '**/vote/**'
            }
            steps {
                echo 'Building python application'
                dir('vote') {
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        stage('test') {
    agent {
        docker {
            image 'python:2.7.16-slim'
            args '--user root'
        }
    }
            when {
                changeset '**/vote/**'
            }
            steps {
                echo 'Testing python application'
                dir('vote') {
                    sh 'nosetests -v'
                }
            }
        }
stage('docker-package'){
agent any
            when {
                changeset '**/vote/**'
                branch 'master'
            }
            steps {
                echo 'Packaging vote app with docker'
                script {
                withDockerRegistry(credentialsId: 'gabrielonjas', url: 'https://index.docker.io/v1/') {
                def workerImage = docker.build("galtamirano/vote:v${env.BUILD_ID}","./vote")
                workerImage.push()
                workerImage.push("${env.BRANCH_NAME}")
                        }
                }

}
}
    }
    post {
        always {
            echo 'Building and testing python app succesfully'
        }
        failure {
            slackSend channel: "#jenkins", message: "Build failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
        success {
            slackSend channel: "#jenkins", message: "Build succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
    }
}
