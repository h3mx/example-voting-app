pipeline {
	agent none
    stages {
        stage('build') {
    agent {
        docker {
            image 'node:8.16.0-alpine'
        }
    }
            when {
                changeset '**/result/**'
            }
            steps {
                echo 'Building npm application'
                dir('result') {
                    sh 'npm install'
                }
            }
        }
        stage('test') {
    agent {
        docker {
            image 'node:8.16.0-alpine'
        }
    }
            when {
                changeset '**/result/**'
            }
            steps {
                echo 'Testing npm application'
                dir('result') {
                    sh 'npm test'
                }
            }
        }
stage('docker-pacakge'){
agent any
when {
changeset '**/result/**'
branch 'master'
}
steps {
                echo 'Packaging result app with docker'
                script {
                withDockerRegistry(credentialsId: 'gabrielonjas', url: 'https://index.docker.io/v1/') {
                def resultImage = docker.build("galtamirano/result:v${env.BUILD_ID}","./result")
                resultImage.push()
                resultImage.push("${env.BRANCH_NAME}")
                        }
                }
            }
}
    }
    post {
        always {
            echo 'Building and testing npm application succesfully'
        }
        failure {
            slackSend channel: "#jenkins", message: "Build failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
        success {
            slackSend channel: "#jenkins", message: "Build succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)"
        }
    }
}
